'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Pipe=undefined;var _events=require('events');var _events2=_interopRequireDefault(_events);var _middleware=require('./middleware');var _defs=require('../presets/defs');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Pipe extends _events2.default{constructor(props={}){super();this._upstream_middlewares=[];this._downstream_middlewares=[];this._onNotified=()=>0;this._onNotified=typeof props.onNotified==='undefined'?()=>0:props.onNotified;this.onBroadcast=this.onBroadcast.bind(this)}onBroadcast(direction,action){const middlewares=this.getMiddlewares(direction);const results=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=middlewares[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){const middleware=_step.value;results.push(middleware.onNotified(action))}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}if(results.every(result=>!!result===false)){this._onNotified(action)}}setMiddlewares(direction,middlewares){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=middlewares[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){const middleware=_step2.value;middleware.setMaxListeners(2);middleware.subscribe(action=>this.onBroadcast(direction,action))}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}if(direction===_middleware.MIDDLEWARE_DIRECTION_UPWARD){this._upstream_middlewares=middlewares;this._downstream_middlewares=[].concat(middlewares).reverse()}else{this._downstream_middlewares=middlewares;this._upstream_middlewares=[].concat(middlewares).reverse()}}getMiddlewares(direction){return{[_middleware.MIDDLEWARE_DIRECTION_UPWARD]:this._upstream_middlewares,[_middleware.MIDDLEWARE_DIRECTION_DOWNWARD]:this._downstream_middlewares}[direction]}feed(direction,buffer){const eventName=`next_${direction}`;const middlewares=this.getMiddlewares(direction);const direct=(buf,isReverse=false)=>this.emit(isReverse?`next_${-direction}`:eventName,buf);const fail=(name,message)=>this.onBroadcast(direction,{type:_defs.PROCESSING_FAILED,payload:{name,message,orgData:buffer}});const last=middlewares.reduce((prev,next)=>{if(prev.listenerCount(eventName)<1){prev.on(eventName,buf=>next.write(direction,{buffer:buf,direct,fail}))}return next});if(last.listenerCount(eventName)<1){last.on(eventName,direct)}middlewares[0].write(direction,{buffer,direct,fail})}}exports.Pipe=Pipe;