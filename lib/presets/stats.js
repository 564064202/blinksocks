'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _fs=require('fs');var _fs2=_interopRequireDefault(_fs);var _path=require('path');var _path2=_interopRequireDefault(_path);var _defs=require('./defs');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const now=()=>new Date().getTime();const DEFAULT_SAMPLE_INTERVAL=30;const DEFAULT_SAVE_INTERVAL=60;class StatsPreset extends _defs.IPresetStatic{static checkParams({save_to,sample_interval=DEFAULT_SAMPLE_INTERVAL,save_interval=DEFAULT_SAVE_INTERVAL}){if(typeof save_to!=='string'||save_to===''){throw Error('\'save_to\' must be a non-empty string')}if(typeof sample_interval==='undefined'){throw Error('\'sample_interval\' must be provided as an integer')}if(typeof sample_interval!=='number'){throw Error('\'sample_interval\' must be a number')}if(!Number.isSafeInteger(sample_interval)){throw Error('\'sample_interval\' must be an integer')}if(sample_interval<1){throw Error('\'sample_interval\' must be greater than 0')}if(typeof save_interval==='undefined'){throw Error('\'save_interval\' must be provided as an integer')}if(typeof save_interval!=='number'){throw Error('\'save_interval\' must be a number')}if(!Number.isSafeInteger(save_interval)){throw Error('\'save_interval\' must be an integer')}if(save_interval<1){throw Error('\'save_interval\' must be greater than 0')}}constructor({save_to,sample_interval=DEFAULT_SAMPLE_INTERVAL,save_interval=DEFAULT_SAVE_INTERVAL}){super();this.sampleInterval=DEFAULT_SAMPLE_INTERVAL;this.saveInterval=DEFAULT_SAVE_INTERVAL;this.saveTo='';this.sampleTimer=null;this.saveTimer=null;this.startedAt=now();this.totalOutBytes=0;this.totalInBytes=0;this.totalOutPackets=0;this.totalInPackets=0;this.totalErrors=0;this.totalConnections=0;this.instantOutSpeed=0;this.instantInSpeed=0;this.maxOutSpeed=0;this.maxInSpeed=0;this.maxConnections=0;this.tmpOut=0;this.tmpIn=0;this.onSave=this.onSave.bind(this);this.onSample=this.onSample.bind(this);this.saveTo=_path2.default.resolve(process.cwd(),save_to);this.sampleInterval=sample_interval;this.saveInterval=save_interval;this.sampleTimer=setInterval(this.onSample,sample_interval*1e3);this.saveTimer=setInterval(this.onSave,save_interval*1e3);process.on('SIGINT',this.onSave)}onSave(){const startedAt=this.startedAt;const endAt=now();const durationMilliSec=endAt-startedAt;const durationSec=durationMilliSec/1e3;const totalPackets=this.totalInPackets+this.totalOutPackets;const totalBytes=this.totalInBytes+this.totalOutBytes;const json={sample:{from:startedAt,to:endAt,duration:durationMilliSec},summary:{maxOutSpeed:this.maxOutSpeed,maxInSpeed:this.maxInSpeed,maxConnections:this.maxConnections,totalOutBytes:this.totalOutBytes,totalOutPackets:this.totalOutPackets,totalInBytes:this.totalInBytes,totalInPackets:this.totalInPackets,totalBytes:totalBytes,totalPackets:totalPackets,totalErrors:this.totalErrors},instant:{outSpeed:this.instantOutSpeed,inSpeed:this.instantInSpeed,totalConnections:this.totalConnections,errorRate:totalPackets.length>0?this.totalErrors/totalPackets:0,outBytesPerSecond:this.totalOutBytes/durationSec,outPacketsPerSecond:this.totalOutPackets/durationSec,inBytesPerSecond:this.totalInBytes/durationSec,inPacketsPerSecond:this.totalInPackets/durationSec,totalBytesPerSecond:totalBytes/durationSec,totalPacketsPerSecond:totalPackets/durationSec},process:{upTime:process.uptime(),cpuUsage:process.cpuUsage(),memoryUsage:process.memoryUsage()}};_fs2.default.writeFileSync(this.saveTo,JSON.stringify(json,null,'  '))}onSample(){this.instantOutSpeed=this.tmpOut/this.sampleInterval;this.instantInSpeed=this.tmpIn/this.sampleInterval;this.maxOutSpeed=Math.max(this.maxOutSpeed,this.instantOutSpeed);this.maxInSpeed=Math.max(this.maxInSpeed,this.instantInSpeed);this.tmpOut=0;this.tmpIn=0}onNotified(action){if(action.type===_defs.PRESET_FAILED){this.totalErrors+=1}if(action.type===_defs.CONNECTION_CREATED){this.totalConnections+=1;this.maxConnections=Math.max(this.maxConnections,this.totalConnections)}if(action.type===_defs.CONNECTION_CLOSED){this.totalConnections-=1}}onDestroy(){clearInterval(this.sampleTimer);clearInterval(this.saveTimer)}beforeOut({buffer}){this.totalOutBytes+=buffer.length;this.totalOutPackets+=1;this.tmpOut+=buffer.length;return buffer}beforeIn({buffer}){this.totalInBytes+=buffer.length;this.totalInPackets+=1;this.tmpIn+=buffer.length;return buffer}}exports.default=StatsPreset;