'use strict';Object.defineProperty(exports,'__esModule',{value:true});const PRESET_INIT=exports.PRESET_INIT='preset/init';const CONNECTION_CREATED=exports.CONNECTION_CREATED='connection/created';const CONNECTION_CLOSED=exports.CONNECTION_CLOSED='connection/closed';const CONNECT_TO_REMOTE=exports.CONNECT_TO_REMOTE='connect/to/remote';const PRESET_FAILED=exports.PRESET_FAILED='preset/failed';const PRESET_CLOSE_CONNECTION=exports.PRESET_CLOSE_CONNECTION='preset/close/connection';class IPreset{static checkParams(params){}onNotified(action){return false}onDestroy(){}beforeOut({buffer}){return buffer}beforeIn({buffer}){return buffer}clientOut({buffer}){return buffer}serverIn({buffer}){return buffer}serverOut({buffer}){return buffer}clientIn({buffer}){return buffer}broadcast(action){}}exports.IPreset=IPreset;class IPresetStatic extends IPreset{constructor(){super();if(IPresetStatic.isInstantiated){throw Error(`${this.constructor.name} is singleton and can only be instantiated once`)}IPresetStatic.isInstantiated=true}}exports.IPresetStatic=IPresetStatic;IPresetStatic.isInstantiated=false;