'use strict';Object.defineProperty(exports,'__esModule',{value:true});const PRESET_INIT=exports.PRESET_INIT='@action:preset_init';const CONNECTION_CREATED=exports.CONNECTION_CREATED='@action:connection_created';const CONNECTION_CLOSED=exports.CONNECTION_CLOSED='@action:connection_closed';const CONNECT_TO_REMOTE=exports.CONNECT_TO_REMOTE='@action:connect_to_remote';const PRESET_FAILED=exports.PRESET_FAILED='@action:preset_failed';const PRESET_CLOSE_CONNECTION=exports.PRESET_CLOSE_CONNECTION='@action:preset_close_connection';const PRESET_PAUSE_RECV=exports.PRESET_PAUSE_RECV='@action:preset_pause_recv';const PRESET_PAUSE_SEND=exports.PRESET_PAUSE_SEND='@action:preset_pause_send';const PRESET_RESUME_RECV=exports.PRESET_RESUME_RECV='@action:preset_resume_recv';const PRESET_RESUME_SEND=exports.PRESET_RESUME_SEND='@action:preset_resume_send';class IPreset{static checkParams(params){}onNotified(action){return false}onDestroy(){}beforeOut({buffer}){return buffer}beforeIn({buffer}){return buffer}clientOut({buffer}){return buffer}serverIn({buffer}){return buffer}serverOut({buffer}){return buffer}clientIn({buffer}){return buffer}broadcast(action){}fail(message){}}exports.IPreset=IPreset;class IPresetStatic extends IPreset{constructor(){super();if(IPresetStatic.isInstantiated){throw Error(`${this.constructor.name} is singleton and can only be instantiated once`)}IPresetStatic.isInstantiated=true}}exports.IPresetStatic=IPresetStatic;IPresetStatic.isInstantiated=false;