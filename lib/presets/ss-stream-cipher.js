'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _crypto=require('crypto');var _crypto2=_interopRequireDefault(_crypto);var _utils=require('../utils');var _defs=require('./defs');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const IV_LEN=16;const ciphers=['aes-128-ctr','aes-192-ctr','aes-256-ctr','aes-128-cfb','aes-192-cfb','aes-256-cfb','camellia-128-cfb','camellia-192-cfb','camellia-256-cfb'];class SsStreamCipherPreset extends _defs.IPreset{constructor(...args){var _temp;return _temp=super(...args),this._cipher=null,this._decipher=null,_temp}static checkParams({method}){if(typeof method!=='string'||method===''){throw Error('\'method\' must be set')}if(!ciphers.includes(method)){throw Error(`'method' must be one of [${ciphers}]`)}}static onInit({method}){this.cipherName=method;this.key=(0,_utils.EVP_BytesToKey)(__KEY__,method.split('-')[1]/8,IV_LEN)}onDestroy(){this._cipher=null;this._decipher=null}beforeOut({buffer}){if(!this._cipher){const iv=_crypto2.default.randomBytes(IV_LEN);this._cipher=_crypto2.default.createCipheriv(SsStreamCipherPreset.cipherName,SsStreamCipherPreset.key,iv);return Buffer.concat([iv,this.encrypt(buffer)])}else{return this.encrypt(buffer)}}beforeIn({buffer,fail}){if(!this._decipher){if(buffer.length<IV_LEN){return fail(`buffer is too short ${buffer.length} bytes to get iv, dump=${buffer.toString('hex')}`)}const iv=buffer.slice(0,IV_LEN);this._decipher=_crypto2.default.createDecipheriv(SsStreamCipherPreset.cipherName,SsStreamCipherPreset.key,iv);return this.decrypt(buffer.slice(IV_LEN))}else{return this.decrypt(buffer)}}encrypt(buffer){return this._cipher.update(buffer)}decrypt(buffer){return this._decipher.update(buffer)}}exports.default=SsStreamCipherPreset;SsStreamCipherPreset.cipherName='';SsStreamCipherPreset.key=null;