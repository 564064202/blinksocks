'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _crypto=require('crypto');var _crypto2=_interopRequireDefault(_crypto);var _defs=require('./defs');var _utils=require('../utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const stb=_utils.Utils.hexStringToBuffer;const TLS_STAGE_HELLO=1;const TLS_STAGE_CHANGE_CIPHER_SPEC=2;const TLS_STAGE_APPLICATION_DATA=3;const MIN_AD_PAYLOAD_LEN=2048;const MAX_AD_PAYLOAD_LEN=16383;function ApplicationData(buffer){const len=_utils.Utils.numberToUInt(buffer.length);return Buffer.concat([stb('170303'),len,buffer])}class ObfsTLS12TicketPreset extends _defs.IPreset{constructor({sni}){super();this._sni=null;this._stage=TLS_STAGE_HELLO;this._pending=null;this._adBuf=null;this.onReceiving=this.onReceiving.bind(this);this.onChunkReceived=this.onChunkReceived.bind(this);this._sni=Buffer.from(sni||'');this._adBuf=new _utils.AdvancedBuffer({getPacketLength:this.onReceiving});this._adBuf.on('data',this.onChunkReceived)}clientOut({buffer,direct}){if(this._stage===TLS_STAGE_HELLO){this._stage=TLS_STAGE_CHANGE_CIPHER_SPEC;this._pending=buffer;const random=[..._utils.Utils.getUTC(),..._crypto2.default.randomBytes(28)];const session=[...stb('20'),..._crypto2.default.randomBytes(32)];const cipher_suites=[...stb('001a'),...stb('c02b'),...stb('c02f'),...stb('c02c'),...stb('c030'),...stb('cc14'),...stb('cc13'),...stb('c013'),...stb('c014'),...stb('009c'),...stb('009d'),...stb('002f'),...stb('0035'),...stb('000a')];const ext_server_name=[...stb('0000'),..._utils.Utils.numberToUInt(2+1+2+this._sni.length),..._utils.Utils.numberToUInt(1+2+this._sni.length),...stb('00'),..._utils.Utils.numberToUInt(this._sni.length),...this._sni];const ticketLen=_utils.Utils.getRandomInt(200,400);const session_ticket=[...stb('0023'),..._utils.Utils.numberToUInt(ticketLen),..._crypto2.default.randomBytes(ticketLen)];const exts=[...stb('ff01000100'),...ext_server_name,...stb('00170000'),...session_ticket,...stb('000d00140012040308040401050308050501080606010201'),...stb('000500050100000000'),...stb('00120000'),...stb('75500000'),...stb('000b00020100'),...stb('000a0006000400170018')];const body=[...stb('0303'),...random,...session,...cipher_suites,...stb('01'),...stb('00'),..._utils.Utils.numberToUInt(exts.length),...exts];const header=[...stb('16'),...stb('0301'),..._utils.Utils.numberToUInt(1+3+body.length),...stb('01'),..._utils.Utils.numberToUInt(body.length,3)];return direct(Buffer.from([...header,...body]))}if(this._stage===TLS_STAGE_APPLICATION_DATA){const chunks=_utils.Utils.getRandomChunks(buffer,MIN_AD_PAYLOAD_LEN,MAX_AD_PAYLOAD_LEN).map(chunk=>ApplicationData(chunk));return Buffer.concat(chunks)}}serverIn({buffer,next,direct,fail}){if(this._stage===TLS_STAGE_HELLO){this._stage=TLS_STAGE_CHANGE_CIPHER_SPEC;if(buffer.length<200){fail(`TLS handshake header(${buffer.length} bytes) is too short`);return}if(!buffer.slice(0,3).equals(stb('160301'))){fail('invalid TLS handshake header');return}const tlsLen=buffer.slice(3,5).readUInt16BE(0);if(tlsLen!==buffer.length-5){fail('unexpected TLS handshake header length');return}const random=[..._utils.Utils.getUTC(),..._crypto2.default.randomBytes(28)];const session=[...stb('20'),..._crypto2.default.randomBytes(32)];const exts=[...stb('ff01000100'),...stb('00050000'),...stb('00170000')];const body=[...stb('0303'),...random,...session,...stb('c02f'),...stb('00'),..._utils.Utils.numberToUInt(exts.length),...exts];const header=[...stb('16'),...stb('0303'),..._utils.Utils.numberToUInt(1+3+body.length),...stb('02'),..._utils.Utils.numberToUInt(body.length,3)];const server_hello=[...header,...body];const change_cipher_spec=[...stb('140303000101')];const finishedLen=_utils.Utils.getRandomInt(32,40);const finished=[...stb('16'),...stb('0303'),..._utils.Utils.numberToUInt(finishedLen),..._crypto2.default.randomBytes(finishedLen)];return direct(Buffer.from([...server_hello,...change_cipher_spec,...finished]),true)}let _buffer=buffer;if(this._stage===TLS_STAGE_CHANGE_CIPHER_SPEC){this._stage=TLS_STAGE_APPLICATION_DATA;_buffer=buffer.slice(43)}this._adBuf.put(_buffer,{next,fail})}serverOut({buffer}){const chunks=_utils.Utils.getRandomChunks(buffer,MIN_AD_PAYLOAD_LEN,MAX_AD_PAYLOAD_LEN).map(chunk=>ApplicationData(chunk));return Buffer.concat(chunks)}clientIn({buffer,next,direct,fail}){if(this._stage===TLS_STAGE_CHANGE_CIPHER_SPEC){this._stage=TLS_STAGE_APPLICATION_DATA;const change_cipher_spec=[...stb('140303000101')];const finished=[...stb('16'),...stb('0303'),...stb('0020'),..._crypto2.default.randomBytes(32)];const chunks=_utils.Utils.getRandomChunks(this._pending,MIN_AD_PAYLOAD_LEN,MAX_AD_PAYLOAD_LEN).map(chunk=>ApplicationData(chunk));this._pending=null;return direct(Buffer.from([...change_cipher_spec,...finished,...Buffer.concat(chunks)]),true)}this._adBuf.put(buffer,{next,fail})}onReceiving(buffer,{fail}){if(buffer.length<5){fail(`Application Data is too short: ${buffer.length} bytes`);return}return 5+buffer.readUInt16BE(3)}onChunkReceived(chunk,{next}){next(chunk.slice(5))}}exports.default=ObfsTLS12TicketPreset;