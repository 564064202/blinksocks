'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _interface=require('../interface');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var NoneObfs=function(_IPreset){_inherits(NoneObfs,_IPreset);function NoneObfs(){_classCallCheck(this,NoneObfs);return _possibleConstructorReturn(this,(NoneObfs.__proto__||Object.getPrototypeOf(NoneObfs)).apply(this,arguments))}_createClass(NoneObfs,[{key:'clientOut',value:function clientOut(_ref){var buffer=_ref.buffer;return buffer}},{key:'serverIn',value:function serverIn(_ref2){var buffer=_ref2.buffer;return buffer}},{key:'serverOut',value:function serverOut(_ref3){var buffer=_ref3.buffer;return buffer}},{key:'clientIn',value:function clientIn(_ref4){var buffer=_ref4.buffer;return buffer}}]);return NoneObfs}(_interface.IPreset);exports.default=NoneObfs;