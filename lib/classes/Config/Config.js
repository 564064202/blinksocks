'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Config=exports.DEFAULT_LOG_LEVEL=exports.DEFAULT_KEY=exports.DEFAULT_CIPHER=undefined;var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _fs=require('fs');var _fs2=_interopRequireDefault(_fs);var _log4js=require('log4js');var _log4js2=_interopRequireDefault(_log4js);var _Crypto=require('../Crypto');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var DEFAULT_CIPHER=exports.DEFAULT_CIPHER='aes-256-cfb';var DEFAULT_KEY=exports.DEFAULT_KEY='my secret password';var DEFAULT_LOG_LEVEL=exports.DEFAULT_LOG_LEVEL='ERROR';var Config=exports.Config=function(){function Config(){_classCallCheck(this,Config)}_createClass(Config,null,[{key:'init',value:function init(json){if((typeof json==='undefined'?'undefined':_typeof(json))!=='object'||Array.isArray(json)){throw Error('Invalid configuration file')}if(typeof json.host!=='string'||json.host===''){throw Error('\'host\' must be provided and is not empty')}if(!Number.isSafeInteger(json.port)||json.port<=0){throw Error('\'port\' must be a natural number')}if(typeof json.server_host==='string'){if(json.server_host===''){throw Error('\'server_host\' must not be empty')}if(!Number.isSafeInteger(json.server_port)||json.server_port<=0){throw Error('\'server_port\' must be a natural number')}Config.isServer=false}if(typeof json.password!=='string'){throw Error('\'password\' must be a string and is not empty')}if(typeof json.cipher!=='string'){throw Error('\'cipher\' must be a string')}if(json.cipher!==''){if(!_Crypto.Crypto.isAvailable(json.cipher)){throw Error('\'cipher\' is not supported, use --ciphers to display all supported ciphers')}if(typeof json.use_iv!=='boolean'){throw Error('\'use_iv\' must be true or false')}if(json.password===''||json.password===DEFAULT_KEY){throw Error('\'password\' must not be empty or \''+DEFAULT_KEY+'\'')}this.cipher=Config.obtainCipher(json.cipher);this.key=this.getKey(this.cipher,json.password);this.use_iv=json.use_iv}else{this.cipher='';this.key='';this.use_iv=false;console.warn('you haven\'t specify a cipher, this shall only be used in development or special cases.')}this.host=json.host;this.port=json.port;this.server_host=json.server_host;this.server_port=json.server_port;this.log_level=this.setUpLogger(json.log_level||DEFAULT_LOG_LEVEL)}/**
   * generate key from config.password
   */},{key:'getKey',value:function getKey(cipher,password){var keyLen=_Crypto.Crypto.getKeySize(cipher);return _Crypto.Crypto.hash(_Crypto.Crypto.hash(password)).substr(0,keyLen)}/**
   * check if crypto module is available
   * @returns {boolean}
   */},{key:'obtainCipher',value:function obtainCipher(tryCipher){var cipher=tryCipher;try{var crypto=require('crypto');crypto.createCipher(cipher,'')}catch(err){if(err.message.indexOf('cipher')!==-1){console.warn('unsupported cipher: \''+cipher+'\', fallback to: \''+DEFAULT_CIPHER+'\'');cipher=DEFAULT_CIPHER}else{console.error('crypto module is unavailable, please re-build your Node.js with [crypto] module.');process.exit(-1)}}return cipher}/**
   * configure log4js
   */},{key:'setUpLogger',value:function setUpLogger(){var level=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';// create logs directory
try{_fs2.default.lstatSync('logs')}catch(err){if(err.code==='ENOENT'){_fs2.default.mkdirSync('logs')}}// determine log level of log4js
var _level=level.toUpperCase();switch(_level){case'OFF':case'FATAL':case'ERROR':case'WARN':case'INFO':case'DEBUG':case'TRACE':case'ALL':break;default:_level=DEFAULT_LOG_LEVEL;break;}// configure log4js globally
if(process.env.NODE_ENV!=='test'){_log4js2.default.configure({'appenders':[{'type':'console','category':'console'},{'type':'dateFile','category':'dateFile','filename':'logs/blinksocks.log','pattern':'-yyyy-MM-dd','alwaysIncludePattern':false}],'replaceConsole':true,'levels':{'console':_level,'dateFile':_level}})}else{_log4js2.default.configure({'appenders':[{'type':'console','category':'console'}],'replaceConsole':true,'levels':{'console':_level}})}return _level}}]);return Config}();Config.isServer=true;