'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.createServer=createServer;var _net=require('net');var _net2=_interopRequireDefault(_net);var _ip=require('ip');var _ip2=_interopRequireDefault(_ip);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const NOOP=0;const SOCKS_VERSION_V4=4;const SOCKS_VERSION_V5=5;const METHOD_NO_AUTH=0;const REQUEST_COMMAND_CONNECT=1;const REQUEST_COMMAND_BIND=2;const REQUEST_COMMAND_UDP=3;const ATYP_V4=1;const ATYP_DOMAIN=3;const ATYP_V6=4;const REPLY_GRANTED=90;const REPLY_SUCCEEDED=0;const REPLY_COMMAND_NOT_SUPPORTED=7;function parseSocks5Identifier(buffer){if(buffer.length<3){return null}if(buffer[0]!==SOCKS_VERSION_V5){return null}if(buffer[1]<1){return null}if(buffer.slice(2).length!==buffer[1]){return null}return true}function parseSocks5Request(buffer){if(buffer.length<9){return null}if(buffer[0]!==SOCKS_VERSION_V5){return null}if(![REQUEST_COMMAND_CONNECT,REQUEST_COMMAND_BIND,REQUEST_COMMAND_UDP].includes(buffer[1])){return null}if(buffer[2]!==NOOP){return null}if(![ATYP_V4,ATYP_DOMAIN,ATYP_V6].includes(buffer[3])){return null}let addr=null;switch(buffer[3]){case ATYP_V4:addr=_ip2.default.toString(buffer.slice(4,8));break;case ATYP_DOMAIN:addr=Buffer.from(buffer.slice(5,5+buffer[4]));break;case ATYP_V6:addr=_ip2.default.toString(buffer.slice(4,20));break;default:break;}const port=buffer.slice(-2).readUInt16BE(0);return{host:addr,port:port}}function parseSocks4Request(buffer){if(buffer.length<9){return null}if(buffer[0]!==SOCKS_VERSION_V4){return null}if(![REQUEST_COMMAND_CONNECT,REQUEST_COMMAND_BIND].includes(buffer[1])){return null}if(buffer[buffer.length-1]!==NOOP){return null}const DSTIP=buffer.slice(4,8);const DSTPORT=buffer.slice(2,4);let DSTADDR=[];const isSocks4a=DSTIP[0]===NOOP&&DSTIP[1]===NOOP&&DSTIP[2]===NOOP&&DSTIP[3]!==NOOP;if(isSocks4a){const rest=buffer.slice(8);const fields=[];let field=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=rest[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){const byte=_step.value;if(byte===NOOP){fields.push(field);field=[]}else{field.push(byte)}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}if(fields.length!==2||fields[1].length<1){return null}DSTADDR=Buffer.from(fields[1])}return{host:isSocks4a?Buffer.from(DSTADDR):_ip2.default.toString(DSTIP),port:DSTPORT.readUInt16BE(0)}}const STAGE_INIT=0;const STAGE_SOCKS5_REQUEST_MESSAGE=1;const STAGE_DONE=2;function createServer(){const server=_net2.default.createServer();server.on('connection',socket=>{let stage=STAGE_INIT;socket.on('data',function onMessage(buffer){let request;if(stage===STAGE_INIT){request=parseSocks5Identifier(buffer);if(request!==null){stage=STAGE_SOCKS5_REQUEST_MESSAGE;socket.write(Buffer.from([SOCKS_VERSION_V5,METHOD_NO_AUTH]));return}request=parseSocks4Request(buffer);if(request!==null){stage=STAGE_DONE;var _request=request;const host=_request.host,port=_request.port;server.emit('proxyConnection',socket,{host:host,port:port,onConnected:()=>{socket.write(Buffer.from([NOOP,REPLY_GRANTED,NOOP,NOOP,NOOP,NOOP,NOOP,NOOP]))}});socket.removeListener('data',onMessage)}}else if(stage===STAGE_SOCKS5_REQUEST_MESSAGE){request=parseSocks5Request(buffer);if(request!==null){stage=STAGE_DONE;const cmd=buffer[1];switch(cmd){case REQUEST_COMMAND_UDP:case REQUEST_COMMAND_CONNECT:{var _request2=request;const host=_request2.host,port=_request2.port;server.emit('proxyConnection',socket,{host:host,port:port,onConnected:()=>{socket.write(Buffer.from([SOCKS_VERSION_V5,REPLY_SUCCEEDED,NOOP,ATYP_V4,NOOP,NOOP,NOOP,NOOP,NOOP,NOOP]))}});socket.removeListener('data',onMessage);break}default:{socket.write(Buffer.from([SOCKS_VERSION_V5,REPLY_COMMAND_NOT_SUPPORTED,NOOP,ATYP_V4,NOOP,NOOP,NOOP,NOOP,NOOP,NOOP]));break}}}}})});return server}