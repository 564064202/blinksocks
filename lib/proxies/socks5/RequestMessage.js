'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.RequestMessage=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _common=require('../common');class RequestMessage extends _common.Message{constructor(options){super();const fields=_extends({VER:_common.SOCKS_VERSION_V5,CMD:_common.REQUEST_COMMAND_CONNECT,RSV:_common.NOOP,ATYP:_common.ATYP_V4,DSTADDR:[_common.NOOP],DSTPORT:[_common.NOOP,_common.NOOP]},options);this.VER=fields.VER;this.CMD=fields.CMD;this.RSV=fields.RSV;this.ATYP=fields.ATYP;this.DSTADDR=fields.DSTADDR;this.DSTPORT=fields.DSTPORT}static parse(buffer){if(buffer.length<9){return null}if(buffer[0]!==_common.SOCKS_VERSION_V5){return null}const reqTypes=[_common.REQUEST_COMMAND_CONNECT,_common.REQUEST_COMMAND_BIND,_common.REQUEST_COMMAND_UDP];if(!reqTypes.includes(buffer[1])){return null}if(buffer[2]!==_common.NOOP){return null}const addrTypes=[_common.ATYP_V4,_common.ATYP_DOMAIN,_common.ATYP_V6];if(!addrTypes.includes(buffer[3])){return null}let DSTADDR=null;switch(buffer[3]){case _common.ATYP_DOMAIN:DSTADDR=buffer.slice(5,5+buffer[4]);break;case _common.ATYP_V6:DSTADDR=buffer.slice(4,20);break;default:DSTADDR=buffer.slice(4,8);break;}return new RequestMessage({VER:buffer[0],CMD:buffer[1],RSV:buffer[2],ATYP:buffer[3],DSTADDR,DSTPORT:buffer.slice(-2)})}}exports.RequestMessage=RequestMessage;