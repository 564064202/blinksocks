'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Utils=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _net=require('net');var _net2=_interopRequireDefault(_net);var _url=require('url');var _url2=_interopRequireDefault(_url);var _ip=require('ip');var _ip2=_interopRequireDefault(_ip);var _address=require('../core/address');var _common=require('../proxies/common');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var Utils=exports.Utils=function(){function Utils(){_classCallCheck(this,Utils)}_createClass(Utils,null,[{key:'toBytesBE',value:function toBytesBE(num){var len=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;var isOutOfRange=num>parseInt('0x'+'ff'.repeat(len));if(isOutOfRange){throw Error('Number '+num+' is too long to store in a \''+len+'\' length buffer')}var buf=Buffer.alloc(len);buf.writeUIntBE(num,0,len);return buf}},{key:'hostToAddress',value:function hostToAddress(uri){var _uri=uri;if(_uri.indexOf('http')!==0||_uri.indexOf('https')!==0){if(_uri.indexOf(':443')!==-1){_uri='https://'+_uri}else{_uri='http://'+_uri}}var _url$parse=_url2.default.parse(_uri),hostname=_url$parse.hostname,port=_url$parse.port;var addrType=_net2.default.isIP(hostname)?_net2.default.isIPv4(hostname)?_common.ATYP_V4:_common.ATYP_V6:_common.ATYP_DOMAIN;var dstAddr=_net2.default.isIP(hostname)?_ip2.default.toBuffer(hostname):Buffer.from(hostname);var dstPort=Utils.toBytesBE(port===null?80:port);return new _address.Address({ATYP:addrType,DSTADDR:dstAddr,DSTPORT:dstPort})}}]);return Utils}();