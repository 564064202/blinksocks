'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Balancer=undefined;var _net=require('net');var _net2=_interopRequireDefault(_net);var _logger=require('./logger');var _logger2=_interopRequireDefault(_logger);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const QUERY_INTERVAL=12e4;const now=()=>new Date().getTime();class Balancer{static start(servers,interval=QUERY_INTERVAL){if(servers.length<1){throw Error('servers cannot be empty')}this._servers=servers;this._pings=this._servers.map(()=>0);this._startQuery(interval)}static destroy(){this._stopQuery()}static getFastest(){let index=0;const pings=this._pings;for(let i=0;i<pings.length;++i){const ping=pings[i];if(ping>0&&ping<pings[index]||pings[index]<=0){index=i}}return this._servers[index]}static _startQuery(interval){if(this._servers.length>1){if(this._timer!==null){this._stopQuery()}this._timer=setInterval(()=>this._query(),interval);this._query()}}static _stopQuery(){clearInterval(this._timer);this._timer=null}static _query(){this._servers.map((server,i)=>{const sstr=`${server.host}:${server.port}`;_logger2.default.verbose(`[balancer] querying ${sstr}`);const startTime=now();const socket=_net2.default.connect({host:server.host,port:server.port},()=>{const ping=now()-startTime;this._pings[i]=ping;_logger2.default.verbose(`[balancer] ${sstr} = ${ping}ms`);socket.end()});socket.on('error',()=>{this._pings[i]=-1;_logger2.default.warn(`[balancer] ${sstr} lost connection`)})})}}exports.Balancer=Balancer;Balancer._servers=[];Balancer._pings=[];Balancer._timer=null;