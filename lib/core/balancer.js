'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Balancer=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _net=require('net');var _net2=_interopRequireDefault(_net);var _url=require('url');var _url2=_interopRequireDefault(_url);var _utils=require('../utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const QUERY_INTERVAL=12e4;class Balancer{static start(servers,interval=QUERY_INTERVAL){if(servers.length<1){throw Error('servers cannot be empty')}this._servers=servers.map((server,i)=>_extends({id:i},server));this._pings=this._servers.map(()=>0);this._startQuery(interval)}static destroy(){this._stopQuery()}static getFastest(){let index=0;const pings=this._pings;for(let i=0;i<pings.length;++i){const ping=pings[i];if(ping>0&&ping<pings[index]||pings[index]<=0){index=i}}const server=this._servers[index];if(!this._server||this._server.id!==server.id){return this._server=server}else{return null}}static _startQuery(interval){if(this._servers.length>1){if(this._timer!==null){this._stopQuery()}this._timer=setInterval(()=>this._query(),interval);this._query()}}static _stopQuery(){clearInterval(this._timer);this._timer=null}static _query(){this._servers.forEach((server,i)=>{let _host,_port;if(server.service){var _url$parse=_url2.default.parse(server.service);const host=_url$parse.hostname,port=_url$parse.port;_host=host;_port=+port}else{_host=server.host;_port=server.port}const sstr=`${_host}:${_port}`;_utils.logger.verbose(`[balancer] querying ${sstr}`);const startTime=Date.now();const socket=_net2.default.connect({host:_host,port:_port},()=>{const ping=Date.now()-startTime;this._pings[i]=ping;_utils.logger.verbose(`[balancer] ${sstr} = ${ping}ms`);socket.end()});socket.on('error',()=>{this._pings[i]=-1;_utils.logger.warn(`[balancer] ${sstr} lost connection`)})})}}exports.Balancer=Balancer;Balancer._servers=[];Balancer._server=null;Balancer._pings=[];Balancer._timer=null;