'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Pipe=undefined;var _events=require('events');var _events2=_interopRequireDefault(_events);var _middleware=require('./middleware');var _defs=require('../presets/defs');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}class Pipe extends _events2.default{constructor(){super();this._upstream_middlewares=[];this._downstream_middlewares=[];this._cacheBuffer=null;this.broadcast=this.broadcast.bind(this)}broadcast(name,action){const middlewares=this.getMiddlewares();const results=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=middlewares[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){const middleware=_step.value;if(middleware.name!==name){results.push(middleware.notify(action))}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}if(name!=='pipe'&&results.every(result=>!!result===false)){this.emit('broadcast',action)}}setMiddlewares(middlewares){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=middlewares[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){const middleware=_step2.value;middleware.setMaxListeners(4);middleware.on('broadcast',this.broadcast);middleware.on('fail',(name,message)=>void this.broadcast(name,{type:_defs.PRESET_FAILED,payload:{name,message,orgData:this._cacheBuffer}}))}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}this._upstream_middlewares=middlewares;this._downstream_middlewares=[].concat(middlewares).reverse()}getMiddlewares(direction=_middleware.MIDDLEWARE_DIRECTION_UPWARD){if(direction===_middleware.MIDDLEWARE_DIRECTION_UPWARD){return this._upstream_middlewares}else{return this._downstream_middlewares}}feed(direction,buffer){this._cacheBuffer=buffer;const eventName=`next_${direction}`;const middlewares=this.getMiddlewares(direction);const direct=(buf,isReverse=false)=>this.emit(isReverse?`next_${-direction}`:eventName,buf);const last=middlewares.reduce((prev,next)=>{if(!prev.hasListener(eventName)){prev.on(eventName,buf=>next.write(direction,{buffer:buf,direct}))}return next});if(!last.hasListener(eventName)){last.on(eventName,direct)}middlewares[0].write(direction,{buffer,direct})}destroy(){const middlewares=this.getMiddlewares();var _iteratorNormalCompletion3=true;var _didIteratorError3=false;var _iteratorError3=undefined;try{for(var _iterator3=middlewares[Symbol.iterator](),_step3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=true){const middleware=_step3.value;middleware.onDestroy()}}catch(err){_didIteratorError3=true;_iteratorError3=err}finally{try{if(!_iteratorNormalCompletion3&&_iterator3.return){_iterator3.return()}}finally{if(_didIteratorError3){throw _iteratorError3}}}this._upstream_middlewares=null;this._downstream_middlewares=null;this._cacheBuffer=null;this.removeAllListeners()}}exports.Pipe=Pipe;