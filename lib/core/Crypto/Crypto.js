'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Crypto=exports.CRYPTO_IV_LEN=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();/* eslint-disable no-undef */var _crypto2=require('crypto');var _crypto3=_interopRequireDefault(_crypto2);var _AdvancedBuffer=require('../AdvancedBuffer');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var HASH_SALT='blinksocks';var CRYPTO_TYPE_CIPHER=0;var CRYPTO_TYPE_DECIPHER=1;var CRYPTO_TYPE_NONE=3;var CRYPTO_DEFAULT_CIPHER='aes-256-cfb';var CRYPTO_IV_LEN=exports.CRYPTO_IV_LEN=16;/**
 * supported ciphers, key length and IV length
 */var cipherKeyIVLens={'aes-128-ctr':[16,16],'aes-192-ctr':[24,16],'aes-256-ctr':[32,16],'aes-128-cfb':[16,16],'aes-192-cfb':[24,16],'aes-256-cfb':[32,16]};var FakeStream=function(){function FakeStream(collector){_classCallCheck(this,FakeStream);this.collector=collector}_createClass(FakeStream,[{key:'write',value:function write(buffer){this.collector(buffer)}},{key:'on',value:function on()/* event, callback */{}}],[{key:'create',value:function create(collector){return new FakeStream(collector)}}]);return FakeStream}();/**
 * encrypt/decrypt data by a cipher/key obtained from config.json
 */var Crypto=exports.Crypto=function(){function Crypto(){_classCallCheck(this,Crypto)}_createClass(Crypto,null,[{key:'_create',value:function _create(type,collector,iv){var cipher=__CIPHER__,key=__KEY__;var stream=null;var _type=cipher===''?CRYPTO_TYPE_NONE:type;var _iv=typeof iv==='undefined'?null:iv;switch(_type){case CRYPTO_TYPE_CIPHER:stream=_iv===null?_crypto3.default.createCipher(cipher,key):_crypto3.default.createCipheriv(cipher,key,iv);break;case CRYPTO_TYPE_DECIPHER:stream=_iv===null?_crypto3.default.createDecipher(cipher,key):_crypto3.default.createDecipheriv(cipher,key,iv);break;case CRYPTO_TYPE_NONE:stream=FakeStream.create(collector);break;default:throw Error('unknown type: '+type);}var _buffer=new _AdvancedBuffer.AdvancedBuffer;_buffer.on('data',function(data){return collector(data)});stream.on('readable',function(){var data=stream.read();if(data!==null){if(__IS_SERVER__&&_type===CRYPTO_TYPE_DECIPHER){_buffer.put(data)}else{collector(data)}}});return stream}},{key:'createCipher',value:function createCipher(collector,iv){return Crypto._create(CRYPTO_TYPE_CIPHER,collector,iv)}},{key:'createDecipher',value:function createDecipher(collector,iv){return Crypto._create(CRYPTO_TYPE_DECIPHER,collector,iv)}},{key:'hash',value:function hash(text){var hash=_crypto3.default.createHash('sha256');hash.update(Buffer.concat([Buffer.from(text),Buffer.from(HASH_SALT)]));return hash.digest('hex')}},{key:'isAvailable',value:function isAvailable(cipher){return!(typeof cipherKeyIVLens[cipher]==='undefined')}},{key:'getCiphers',value:function getCiphers(){return Object.keys(cipherKeyIVLens)}/**
   * generate key from config.key
   * @param cipher
   * @param key
   * @returns {string}
   */},{key:'getStrongKey',value:function getStrongKey(cipher,key){var keyLen=this.getKeySize(cipher);return this.hash(key).substr(0,keyLen)}},{key:'getKeySize',value:function getKeySize(cipher){return cipherKeyIVLens[cipher][0]}/**
   * pick a valid cipher if is available on the current platform
   * @returns {boolean}
   */},{key:'getCipher',value:function getCipher(tryCipher){var cipher=tryCipher;try{var _crypto=require('crypto');_crypto.createCipher(cipher,'')}catch(err){if(err.message.indexOf('cipher')!==-1){console.warn('unsupported cipher: \''+cipher+'\', fallback to: \''+CRYPTO_DEFAULT_CIPHER+'\'');cipher=CRYPTO_DEFAULT_CIPHER}else{console.error('crypto module is unavailable, please re-build your Node.js with [crypto] module.');process.exit(-1)}}return cipher}}]);return Crypto}();