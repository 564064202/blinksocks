'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Config=exports.DEFAULT_LOG_LEVEL=exports.DEFAULT_KEY=undefined;var _fs=require('fs');var _fs2=_interopRequireDefault(_fs);var _winston=require('winston');var _winston2=_interopRequireDefault(_winston);var _utils=require('../utils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const DEFAULT_KEY=exports.DEFAULT_KEY='my secret password';const DEFAULT_LOG_LEVEL=exports.DEFAULT_LOG_LEVEL='error';class Config{static init(json){if(typeof json!=='object'||Array.isArray(json)){throw Error('Invalid configuration file')}if(typeof json.host!=='string'||json.host===''){throw Error('\'host\' must be provided and is not empty')}this.host=json.host;if(!_utils.Utils.isValidPort(json.port)){throw Error('\'port\' is invalid')}this.port=json.port;if(typeof json.servers!=='undefined'){if(!Array.isArray(json.servers)){throw Error('\'servers\' must be provided as an array')}const servers=json.servers.map(item=>item.split(':')).filter(pair=>pair.length===2&&_utils.Utils.isValidPort(+pair[1])).map(([host,port])=>({host,port}));if(servers.length<1){throw Error('\'servers\' must contain at least one valid item')}this.servers=servers;this._is_server=false}else{this._is_server=true}if(typeof json.key!=='string'){throw Error('\'key\' must be a string')}if(json.key===''){throw Error('\'key\' cannot be empty')}if(json.key===DEFAULT_KEY){throw Error(`'key' cannot be '${DEFAULT_KEY}'`)}this.key=json.key;if(!Array.isArray(json.presets)){throw Error('\'presets\' must be an array')}if(json.presets.length<1){throw Error('\'presets\' must contain at least one preset')}var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=json.presets[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){const preset=_step.value;const name=preset.name,params=preset.params;if(typeof name==='undefined'){throw Error('\'preset.name\' must be a string')}const ps=require(`../presets/${preset.name}`).default;if(name!==json.presets[0].name){delete new ps(params||{})}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}this.presets=json.presets;if(typeof json.redirect==='string'&&json.redirect!==''){const address=json.redirect.split(':');if(address.length!==2||!_utils.Utils.isValidPort(+address[1])){throw Error('\'redirect\' is an invalid address')}}this.redirect=json.redirect;if(typeof json.timeout!=='number'){throw Error('\'timeout\' must be a number')}if(json.timeout<1){throw Error('\'timeout\' must be greater than 0')}if(json.timeout<60){console.warn(`==> [config] 'timeout' is too short, is ${json.timeout}s expected?`)}this.timeout=json.timeout;this.profile=json.profile;this.watch=json.watch;this.setGlobals();this.setUpLogger(json.log_level||DEFAULT_LOG_LEVEL)}static setGlobals(){global.__IS_SERVER__=this._is_server;global.__IS_CLIENT__=!this._is_server;global.__LOCAL_HOST__=this.host;global.__LOCAL_PORT__=this.port;global.__SERVERS__=this.servers;global.__KEY__=this.key;global.__PRESETS__=this.presets;global.__REDIRECT__=this.redirect;global.__TIMEOUT__=this.timeout;global.__LOG_LEVEL__=this.log_level;global.__PROFILE__=this.profile;global.__IS_WATCH__=this.watch}static setUpLogger(level=''){try{_fs2.default.lstatSync('logs')}catch(err){if(err.code==='ENOENT'){_fs2.default.mkdirSync('logs')}}let _level=level.toLowerCase();switch(_level){case'silly':case'debug':case'verbose':case'info':case'warn':case'error':break;default:_level=DEFAULT_LOG_LEVEL;break;}_winston2.default.configure({level:_level,transports:[new _winston2.default.transports.Console({colorize:true,prettyPrint:true}),new _winston2.default.transports.File({filename:`logs/blinksocks-${__IS_CLIENT__?'client':'server'}.log`,maxsize:2*1024*1024,silent:['test','debug'].includes(process.env.NODE_ENV)})]});this.log_level=_level}static abstract(){const keys=Object.getOwnPropertyNames(this).filter(key=>!['length','name','prototype','init','setGlobals','setUpLogger','abstract','_is_server'].includes(key)&&this[key]!==undefined);const json={};var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=keys[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){const key=_step2.value;json[key]=this[key]}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}return json}}exports.Config=Config;