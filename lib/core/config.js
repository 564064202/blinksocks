'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Config=exports.DEFAULT_LOG_LEVEL=exports.DEFAULT_KEY=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _fs=require('fs');var _fs2=_interopRequireDefault(_fs);var _winston=require('winston');var _winston2=_interopRequireDefault(_winston);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var DEFAULT_KEY=exports.DEFAULT_KEY='my secret password';var DEFAULT_LOG_LEVEL=exports.DEFAULT_LOG_LEVEL='error';var Config=exports.Config=function(){function Config(){_classCallCheck(this,Config)}_createClass(Config,null,[{key:'init',value:function init(json){if((typeof json==='undefined'?'undefined':_typeof(json))!=='object'||Array.isArray(json)){throw Error('Invalid configuration file')}if(typeof json.host!=='string'||json.host===''){throw Error('\'host\' must be provided and is not empty')}this.host=json.host;if(!Number.isSafeInteger(json.port)||json.port<=0){throw Error('\'port\' must be a natural number')}this.port=json.port;if(typeof json.servers!=='undefined'){if(!Array.isArray(json.servers)){throw Error('\'servers\' must be provided as an array')}var servers=json.servers.map(function(item){return item.split(':')}).filter(function(pair){return pair.length===2&&Number.isSafeInteger(+pair[1])}).map(function(_ref){var _ref2=_slicedToArray(_ref,2),host=_ref2[0],port=_ref2[1];return{host:host,port:port}});if(servers.length<1){throw Error('\'servers\' must contain at least one item')}this.servers=servers;this._is_server=false}else{this._is_server=true}if(typeof json.key!=='string'){throw Error('\'key\' must be a string')}if(json.key===''){throw Error('\'key\' cannot be empty')}if(json.key===DEFAULT_KEY){throw Error('\'key\' cannot be \''+DEFAULT_KEY+'\'')}this.key=json.key;if(typeof json.frame!=='string'){throw Error('\'frame\' must be a string')}if(typeof json.frame_params!=='string'){throw Error('\'frame_params\' must be a string')}this.frame=json.frame||'origin';this.frame_params=json.frame_params;if(typeof json.crypto!=='string'){throw Error('\'crypto\' must be a string')}if(typeof json.crypto_params!=='string'){throw Error('\'crypto_params\' must be a string')}this.crypto=json.crypto||'none';this.crypto_params=json.crypto_params;if(typeof json.protocol!=='string'){throw Error('\'protocol\' must be a string')}if(typeof json.protocol_params!=='string'){throw Error('\'protocol_params\' must be a string')}this.protocol=json.protocol||'none';this.protocol_params=json.protocol_params;if(typeof json.obfs!=='string'){throw Error('\'obfs\' must be a string')}if(typeof json.obfs_params!=='string'){throw Error('\'obfs_params\' must be a string')}this.obfs=json.obfs||'none';this.obfs_params=json.obfs_params;this.profile=!!json.profile;this.setGlobals();this.setUpLogger(json.log_level||DEFAULT_LOG_LEVEL)}},{key:'setGlobals',value:function setGlobals(){global.__IS_SERVER__=this._is_server;global.__IS_CLIENT__=!this._is_server;global.__LOCAL_HOST__=this.host;global.__LOCAL_PORT__=this.port;global.__SERVERS__=this.servers;global.__KEY__=this.key;global.__FRAME__=this.frame;global.__FRAME_PARAMS__=this.frame_params;global.__CRYPTO__=this.crypto;global.__CRYPTO_PARAMS__=this.crypto_params;global.__PROTOCOL__=this.protocol;global.__PROTOCOL_PARAMS__=this.protocol_params;global.__OBFS__=this.obfs;global.__OBFS_PARAMS__=this.obfs_params;global.__LOG_LEVEL__=this.log_level;global.__PROFILE__=this.profile}},{key:'setUpLogger',value:function setUpLogger(){var level=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{_fs2.default.lstatSync('logs')}catch(err){if(err.code==='ENOENT'){_fs2.default.mkdirSync('logs')}}var _level=level.toLowerCase();switch(_level){case'silly':case'debug':case'verbose':case'info':case'warn':case'error':break;default:_level=DEFAULT_LOG_LEVEL;break;}_winston2.default.configure({level:_level,transports:[new _winston2.default.transports.Console({colorize:true,prettyPrint:true}),new _winston2.default.transports.File({filename:'logs/blinksocks-'+(__IS_CLIENT__?'client':'server')+'.log',maxsize:2*1024*1024,silent:['test','debug'].includes(process.env.NODE_ENV)})]});this.log_level=_level}},{key:'abstract',value:function abstract(){var _this=this;var keys=Object.getOwnPropertyNames(this).filter(function(key){return!['length','name','prototype','init','setGlobals','setUpLogger','abstract','_is_server'].includes(key)&&_this[key]!==undefined});var json={};var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=keys[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var key=_step.value;json[key]=this[key]}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}return json}}]);return Config}();