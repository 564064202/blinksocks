'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Hub=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _net=require('net');var _net2=_interopRequireDefault(_net);var _winston=require('winston');var _winston2=_interopRequireDefault(_winston);var _config=require('./config');var _socket=require('./socket');var _balancer=require('./balancer');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var nextId=function(){var i=0;return function(){if(i>Number.MAX_SAFE_INTEGER-1){i=0}return++i}}();var Hub=exports.Hub=function(){function Hub(config){_classCallCheck(this,Hub);this._hub=null;_config.Config.init(config);this._hub=_net2.default.createServer();this._hub.on('error',this.onError.bind(this));this._hub.on('close',this.onClose.bind(this));this._hub.on('connection',this.onConnect.bind(this))}_createClass(Hub,[{key:'onError',value:function onError(err){_winston2.default.error(err);this._hub.close()}},{key:'onClose',value:function onClose(){console.info('==> [hub] shutdown');if(__IS_CLIENT__){_balancer.Balancer.destroy();console.info('==> [balancer] stopped')}process.exit(0)}},{key:'onConnect',value:function onConnect(socket){var id=nextId();new _socket.Socket({id:id,socket:socket});_winston2.default.info('[hub] client['+id+'] connected')}},{key:'run',value:function run(){var _this=this;var options={host:__LOCAL_HOST__,port:__LOCAL_PORT__};this._hub.listen(options,function(){console.info('==> [hub] use configuration:');console.info(_config.Config.abstract());console.info('==> [hub] is running as: '+(__IS_SERVER__?'Server':'Client'));console.info('==> [hub] is listening on:',_this._hub.address());if(__IS_CLIENT__){console.info('==> [balancer] started');_balancer.Balancer.init(__SERVERS__)}})}}]);return Hub}();