'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.Hub=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();/* eslint-disable no-undef */var _net=require('net');var _net2=_interopRequireDefault(_net);var _Config=require('../Config');var _Socket=require('../Socket');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var Logger=require('../../utils/logger')(__filename);var nextId=function(){var i=0;return function(){return++i}}();var Hub=exports.Hub=function(){// instance of class net.Server
function Hub(config){_classCallCheck(this,Hub);this._hub=null;// parse config json
_Config.Config.init(config);Logger.setLevel(__LOG_LEVEL__);this._hub=_net2.default.createServer();this._hub.on('error',this.onError.bind(this));this._hub.on('close',this.onClose.bind(this));this._hub.on('connection',this.onConnect.bind(this))}_createClass(Hub,[{key:'onError',value:function onError(err){Logger.error(err);this._hub.close()}},{key:'onClose',value:function onClose(){Logger.info('server shutdown')}},{key:'onConnect',value:function onConnect(socket){var id=nextId();new _Socket.Socket({id:id,socket:socket});Logger.info('client['+id+'] connected')}},{key:'run',value:function run(){var _this=this;var options={host:__LOCAL_HOST__,port:__LOCAL_PORT__};this._hub.listen(options,function(){Logger.info('blinksocks is running as \''+(__IS_SERVER__?'Server':'Client')+'\'');Logger.info('opened hub on:',_this._hub.address())})}}]);return Hub}();