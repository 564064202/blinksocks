'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.ClientProxy=undefined;var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _utils=require('../utils');var _socks=require('../proxies/socks5');var _socks2=require('../proxies/socks4');var _http=require('../proxies/http');var _common=require('../proxies/common');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var ClientProxy=exports.ClientProxy=function(){function ClientProxy(props){_classCallCheck(this,ClientProxy);this._socksTcpReady=false;this._socksUdpReady=false;this._httpReady=false;this.onHandshakeDone=props.onHandshakeDone}_createClass(ClientProxy,[{key:'isDone',value:function isDone(){return[this._socksTcpReady,this._socksUdpReady,this._httpReady].some(function(v){return!!v})}},{key:'makeHandshake',value:function makeHandshake(socket,buffer){this._trySocksHandshake(socket,buffer);if(!this.isDone()){this._tryHttpHandshake(socket,buffer)}}},{key:'_trySocksHandshake',value:function _trySocksHandshake(socket,buffer){if(!this.isDone()){this._trySocks5Handshake(socket,buffer)}if(!this.isDone()){this._trySocks4Handshake(socket,buffer)}}},{key:'_trySocks4Handshake',value:function _trySocks4Handshake(socket,buffer){var _this=this;var request=_socks2.RequestMessage.parse(buffer);if(request!==null){var CMD=request.CMD,DSTIP=request.DSTIP,DSTADDR=request.DSTADDR,DSTPORT=request.DSTPORT;if(CMD===_common.REQUEST_COMMAND_CONNECT){var addr={type:DSTADDR.length>0?_common.ATYP_DOMAIN:_common.ATYP_V4,host:DSTADDR.length>0?DSTADDR:DSTIP,port:DSTPORT};this.onHandshakeDone(addr,function(){var message=new _socks2.ReplyMessage({CMD:_common.REPLY_GRANTED});socket.write(message.toBuffer());_this._socksTcpReady=true})}}}},{key:'_trySocks5Handshake',value:function _trySocks5Handshake(socket,buffer){var _this2=this;var identifier=_socks.IdentifierMessage.parse(buffer);if(identifier!==null){var message=new _socks.SelectMessage;socket.write(message.toBuffer());return}var request=_socks.RequestMessage.parse(buffer);if(request!==null){var type=request.CMD;switch(type){case _common.REQUEST_COMMAND_UDP:case _common.REQUEST_COMMAND_CONNECT:{var addr={type:request.ATYP,host:request.DSTADDR,port:request.DSTPORT};this.onHandshakeDone(addr,function(){var message=new _socks.ReplyMessage({REP:_common.REPLY_SUCCEEDED});socket.write(message.toBuffer());if(type===_common.REQUEST_COMMAND_CONNECT){_this2._socksTcpReady=true}else{_this2._socksUdpReady=true}});break}default:{var _message=new _socks.ReplyMessage({REP:_common.REPLY_COMMAND_NOT_SUPPORTED});socket.write(_message.toBuffer());break}}}}},{key:'_tryHttpHandshake',value:function _tryHttpHandshake(socket,buffer){var _this3=this;var request=_http.HttpRequestMessage.parse(buffer);if(request!==null){var METHOD=request.METHOD,HOST=request.HOST;var addr=_utils.Utils.parseURI(HOST.toString());this.onHandshakeDone(addr,function(onForward){if(METHOD.toString()==='CONNECT'){var message=new _http.ConnectReplyMessage;socket.write(message.toBuffer())}else{onForward(buffer)}_this3._httpReady=true})}}}]);return ClientProxy}();