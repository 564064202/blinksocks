'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.DNSCache=exports.DNS_SURVIVAL_TIME=undefined;var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _dns=require('dns');var _dns2=_interopRequireDefault(_dns);var _net=require('net');var _net2=_interopRequireDefault(_net);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _asyncToGenerator(fn){return function(){var gen=fn.apply(this,arguments);return new Promise(function(resolve,reject){function step(key,arg){try{var info=gen[key](arg);var value=info.value}catch(error){reject(error);return}if(info.done){resolve(value)}else{return Promise.resolve(value).then(function(value){step('next',value)},function(err){step('throw',err)})}}return step('next')})}}const DNS_SURVIVAL_TIME=exports.DNS_SURVIVAL_TIME=3600000;class DNSCache{constructor(){this._pool={}}static create(){return new DNSCache}_now(){return new Date().getTime()}_lookup(hostname){return new Promise((resolve,reject)=>{_dns2.default.lookup(hostname,function(err,address){if(err){reject(err)}else{resolve(address)}})})}_put(hostname,address){const expire=this._now()+DNS_SURVIVAL_TIME;this._pool[hostname]=[address,expire]}get(hostname){var _this=this;return _asyncToGenerator(function*(){if(_net2.default.isIP(hostname)){return hostname}let address=null;if(typeof _this._pool[hostname]==='undefined'){address=yield _this._lookup(hostname);_this._put(hostname,address)}else{var _pool$hostname=_slicedToArray(_this._pool[hostname],2);const addr=_pool$hostname[0],expire=_pool$hostname[1];if(_this._now()>=expire){delete _this._pool[hostname]}address=addr}return address})()}}exports.DNSCache=DNSCache;